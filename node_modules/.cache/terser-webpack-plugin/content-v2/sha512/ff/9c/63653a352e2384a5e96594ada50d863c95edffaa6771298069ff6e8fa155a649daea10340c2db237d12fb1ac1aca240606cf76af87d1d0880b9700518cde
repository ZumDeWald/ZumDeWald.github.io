{"map":"{\"version\":3,\"sources\":[\"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/FilterList.js\",\"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js\",\"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/InfoWindow.js\",\"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js\",\"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/serviceWorker.js\",\"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/index.js\"],\"names\":[\"FilterList\",\"props\",\"react_default\",\"a\",\"createElement\",\"id\",\"onChange\",\"e\",\"target\",\"value\",\"showAllLocations\",\"onFilterMarker\",\"className\",\"locations\",\"map\",\"location\",\"index\",\"key\",\"title\",\"Map\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onScriptLoad\",\"bind\",\"assertThisInitialized\",\"window\",\"google\",\"maps\",\"document\",\"getElementById\",\"options\",\"mainMap\",\"onMapLoad\",\"_this2\",\"script\",\"type\",\"src\",\"grabFirstScript\",\"getElementsByTagName\",\"parentNode\",\"insertBefore\",\"addEventListener\",\"Component\",\"InfoWindow\",\"App\",\"state\",\"lat\",\"lng\",\"bounds\",\"markers\",\"setMapOnAll\",\"forEach\",\"marker\",\"setMap\",\"filterMarker\",\"panTo\",\"position\",\"panToBounds\",\"mapLoad\",\"LatLngBounds\",\"place\",\"Marker\",\"animation\",\"Animation\",\"DROP\",\"zoom\",\"extend\",\"push\",\"addListener\",\"createInfoWindow\",\"fitBounds\",\"currentTitle\",\"currentID\",\"infoWindow\",\"content\",\"concat\",\"ReactDOM\",\"render\",\"src_InfoWindow\",\"open\",\"src_FilterList\",\"src_Map\",\"center\",\"Boolean\",\"hostname\",\"match\",\"src_App_0\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nfunction FilterList(props) {\\n\\n  return(\\n  <div id=\\\"filter-bar\\\">\\n    <div id=\\\"filter-title\\\">Filter:</div>\\n    <select id=\\\"filter-options\\\"\\n            onChange={\\n              (e) => {\\n            // See All Loc runs func to show all,\\n            // else the selected marker loc is filtered\\n                if(e.target.value === \\\"See All Locations\\\")\\n                  props.showAllLocations();\\n                else\\n                  props.onFilterMarker(e.target.value);\\n              }}>\\n      <option value=\\\"See All Locations\\\"\\n              className=\\\"filter-option\\\"\\n              >See All Locations</option>\\n    {/* Loop over locations and add listing for each */}\\n      {props.locations.map((location, index) => (\\n      <option key={index}\\n              value={index}\\n              className=\\\"filter-option\\\"\\n          >{location.title}</option>\\n      ))}\\n    </select>\\n  </div>\\n  )\\n}\\n\\n\\nexport default FilterList\\n\",\"import React, { Component } from 'react';\\n\\n\\n\\nclass Map extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.onScriptLoad = this.onScriptLoad.bind(this)\\n  }\\n\\n  // Once script load store new Google Map instance in const map\\n  onScriptLoad() {\\n    const map = new window.google.maps.Map(\\n      document.getElementById(this.props.id),\\n      this.props.options);\\n    //set map to window obj to get global access\\n    window.mainMap = map;\\n    this.props.onMapLoad(map);\\n  }\\n\\n  componentDidMount() {\\n    //Check if script loading Google Maps API is already loaded\\n    //Make Async API call if API isn't already loaded\\n    if(!window.google) {\\n      let script = document.createElement('script');\\n      script.id = 'GoogleAPIScript';\\n      script.type = 'text/javascript';\\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3`;\\n      //Place our API call script on top of others\\n      let grabFirstScript = document.getElementsByTagName('script')[0];\\n      grabFirstScript.parentNode.insertBefore(script, grabFirstScript);\\n      //Event Listener to instantiate map after Async call returns\\n      script.addEventListener('load', e => {\\n        this.onScriptLoad()\\n      })\\n    } else {\\n      this.onScriptLoad()\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      //Return div that will be targeted by onScriptLoad to\\n      //populate Map once ASync call returns\\n      <div id={this.props.id} />\\n    );\\n  }\\n\\n}\\n\\nexport default Map\\n\",\"import React from 'react';\\n\\nfunction InfoWindow(props) {\\n  return(\\n    //Empty div to be populated by props passed down\\n  <div className=\\\"info-window\\\">{props.title}</div>\\n  )\\n}\\n\\n\\nexport default InfoWindow\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FilterList from './FilterList';\\nimport Map from './Map';\\nimport InfoWindow from './InfoWindow';\\n\\nimport './App.css';\\n\\nclass App extends Component {\\n\\n  state = {\\n    locations: [\\n      {title: 'Bethlehem', location:{lat: 31.705791, lng: 35.200657}},\\n      {title: 'Nazareth', location:{lat: 32.6996, lng: 35.3035}},\\n      {title: 'Capernaum', location:{lat: 32.8803, lng: 35.5733}},\\n      {title: 'Gesthsemane', location:{lat: 31.779402, lng: 35.240197}},\\n      {title: 'Church of the Holy Sepulchre', location:{lat: 31.7784013, lng: 35.2295513}}\\n    ],\\n  }\\n\\n  bounds = null;\\n  markers=[];\\n\\n  setMapOnAll = (map) => {\\n    this.markers.forEach((marker) => {\\n      marker.setMap(map);\\n    })\\n  }\\n\\n  filterMarker = (index) => {\\n    this.setMapOnAll(null);\\n    this.markers[index].setMap(window.mainMap);\\n    window.mainMap.panTo(this.markers[index].position);\\n  }\\n\\n  showAllLocations = () => {\\n    this.setMapOnAll(window.mainMap);\\n    window.mainMap.panToBounds(this.bounds, 150);\\n  }\\n\\n    //On creating a map instance, add markers/infoWindows\\n  mapLoad = (map) => {\\n    //Create bounds instance\\n    this.bounds = new window.google.maps.LatLngBounds();\\n    //Loop over state and create marker info for each location\\n    //Then add listener for each individual marker\\n    this.state.locations.forEach((place, index) => {\\n      let position = place.location;\\n      let title = place.title;\\n      let marker = new window.google.maps.Marker({\\n        map: map,\\n        position: position,\\n        title: title,\\n        animation: window.google.maps.Animation.DROP,\\n        id: index,\\n        zoom: 20\\n      });\\n      //Extend boundry of map to incorporate each marker\\n      this.bounds.extend(marker.position);\\n      this.markers.push(marker);\\n      marker.addListener('click', () => {\\n        this.createInfoWindow(marker, map);\\n      });\\n    });\\n    //Fit map to extended bounds\\n    map.fitBounds(this.bounds);\\n  }\\n\\n\\n  createInfoWindow(e, map) {\\n    //save title and ID to pass to InfoWindow component\\n    let currentTitle = e.title;\\n    let currentID = e.id;\\n    //create InfoWindow instance\\n    const infoWindow = new window.google.maps.InfoWindow({\\n      content: `<div id='${currentID}' />`,\\n      position: e.position\\n    })\\n    //add listener to poulate infoWindow on click\\n    infoWindow.addListener('domready', e => {\\n      ReactDOM.render(<InfoWindow\\n        title={currentTitle}\\n      />, document.getElementById(`${currentID}`))\\n    })\\n    //open infoWindow on map\\n    infoWindow.open(map)\\n  }\\n\\n\\n  render() {\\n\\n    return (\\n      <div id=\\\"map-container\\\">\\n        <FilterList\\n          locations={this.state.locations}\\n          onFilterMarker={this.filterMarker}\\n          showAllLocations={this.showAllLocations}\\n         />\\n        <Map\\n          id='main-map'\\n          options={{\\n            center: { lat:31.7053996 ,lng:35.1936877 },\\n            zoom: 20\\n          }}\\n          onMapLoad={ this.mapLoad }\\n        />\\n      </div>\\n    );\\n  }\\n\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if ('serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(t,e,n){},16:function(t,e,n){},18:function(t,e,n){\"use strict\";n.r(e);var o=n(0),a=n.n(o),i=n(2),r=n.n(i),l=(n(14),n(3)),c=n(4),s=n(7),d=n(5),p=n(6);var u=function(t){return a.a.createElement(\"div\",{id:\"filter-bar\"},a.a.createElement(\"div\",{id:\"filter-title\"},\"Filter:\"),a.a.createElement(\"select\",{id:\"filter-options\",onChange:function(e){\"See All Locations\"===e.target.value?t.showAllLocations():t.onFilterMarker(e.target.value)}},a.a.createElement(\"option\",{value:\"See All Locations\",className:\"filter-option\"},\"See All Locations\"),t.locations.map(function(t,e){return a.a.createElement(\"option\",{key:e,value:e,className:\"filter-option\"},t.title)})))},m=n(1),w=function(t){function e(t){var n;return Object(l.a)(this,e),(n=Object(s.a)(this,Object(d.a)(e).call(this,t))).onScriptLoad=n.onScriptLoad.bind(Object(m.a)(Object(m.a)(n))),n}return Object(p.a)(e,t),Object(c.a)(e,[{key:\"onScriptLoad\",value:function(){var t=new window.google.maps.Map(document.getElementById(this.props.id),this.props.options);window.mainMap=t,this.props.onMapLoad(t)}},{key:\"componentDidMount\",value:function(){var t=this;if(window.google)this.onScriptLoad();else{var e=document.createElement(\"script\");e.id=\"GoogleAPIScript\",e.type=\"text/javascript\",e.src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(e,n),e.addEventListener(\"load\",function(e){t.onScriptLoad()})}}},{key:\"render\",value:function(){return a.a.createElement(\"div\",{id:this.props.id})}}]),e}(o.Component);var f=function(t){return a.a.createElement(\"div\",{className:\"info-window\"},t.title)},h=(n(16),function(t){function e(){var t,n;Object(l.a)(this,e);for(var o=arguments.length,a=new Array(o),i=0;i<o;i++)a[i]=arguments[i];return(n=Object(s.a)(this,(t=Object(d.a)(e)).call.apply(t,[this].concat(a)))).state={locations:[{title:\"Bethlehem\",location:{lat:31.705791,lng:35.200657}},{title:\"Nazareth\",location:{lat:32.6996,lng:35.3035}},{title:\"Capernaum\",location:{lat:32.8803,lng:35.5733}},{title:\"Gesthsemane\",location:{lat:31.779402,lng:35.240197}},{title:\"Church of the Holy Sepulchre\",location:{lat:31.7784013,lng:35.2295513}}]},n.bounds=null,n.markers=[],n.setMapOnAll=function(t){n.markers.forEach(function(e){e.setMap(t)})},n.filterMarker=function(t){n.setMapOnAll(null),n.markers[t].setMap(window.mainMap),window.mainMap.panTo(n.markers[t].position)},n.showAllLocations=function(){n.setMapOnAll(window.mainMap),window.mainMap.panToBounds(n.bounds,150)},n.mapLoad=function(t){n.bounds=new window.google.maps.LatLngBounds,n.state.locations.forEach(function(e,o){var a=e.location,i=e.title,r=new window.google.maps.Marker({map:t,position:a,title:i,animation:window.google.maps.Animation.DROP,id:o,zoom:20});n.bounds.extend(r.position),n.markers.push(r),r.addListener(\"click\",function(){n.createInfoWindow(r,t)})}),t.fitBounds(n.bounds)},n}return Object(p.a)(e,t),Object(c.a)(e,[{key:\"createInfoWindow\",value:function(t,e){var n=t.title,o=t.id,i=new window.google.maps.InfoWindow({content:\"<div id='\".concat(o,\"' />\"),position:t.position});i.addListener(\"domready\",function(t){r.a.render(a.a.createElement(f,{title:n}),document.getElementById(\"\".concat(o)))}),i.open(e)}},{key:\"render\",value:function(){return a.a.createElement(\"div\",{id:\"map-container\"},a.a.createElement(u,{locations:this.state.locations,onFilterMarker:this.filterMarker,showAllLocations:this.showAllLocations}),a.a.createElement(w,{id:\"main-map\",options:{center:{lat:31.7053996,lng:35.1936877},zoom:20},onMapLoad:this.mapLoad}))}}]),e}(o.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(a.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})},9:function(t,e,n){t.exports=n(18)}},[[9,2,1]]]);","extractedComments":[]}
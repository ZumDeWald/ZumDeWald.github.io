{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js\";\nimport React, { Component } from 'react';\nimport scriptLoader from 'react-async-script-loader';\nimport InfoWindow from './InfoWindow';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var isScriptLoadSucceed = _ref.isScriptLoadSucceed;\n\n      if (isScriptLoadSucceed) {\n        (function () {\n          var populateInfoWindow = function populateInfoWindow(marker, infowindow) {\n            //make sure infoWindow not already open\n            if (infowindow.marker !== marker) {\n              infowindow.marker = marker;\n              infowindow.setContent(\"Hello\"); //make sure marker is cleared if infowindow is closed\n\n              infowindow.addListener('closeclick', function () {\n                infowindow.marker = null;\n                marker.setAnimation(null);\n              });\n            }\n          };\n\n          var markers = [];\n          var map = new window.google.maps.Map(document.getElementById('map'), {\n            center: {\n              lat: 34.6466411,\n              lng: -97.9536852\n            },\n            zoom: 13\n          });\n          var locations = [{\n            title: 'Bethlehem',\n            location: {\n              lat: 31.7053996,\n              lng: 35.1936877\n            }\n          }, {\n            title: 'Nazareth',\n            location: {\n              lat: 32.6996454,\n              lng: 35.2908666\n            }\n          }, {\n            title: 'Capernaum',\n            location: {\n              lat: 32.8803473,\n              lng: 35.5645522\n            }\n          }, {\n            title: 'Gesthsemane',\n            location: {\n              lat: 31.7793143,\n              lng: 35.2375914\n            }\n          }, {\n            title: 'Church of the Holy Sepulchre',\n            location: {\n              lat: 31.7784858,\n              lng: 35.2274115\n            }\n          }];\n          var infoWindow = new window.google.maps.InfoWindow({\n            content: null\n          });\n          var bounds = new window.google.maps.LatLngBounds(); //Loop over locations and create markers\n\n          var _loop = function _loop(i) {\n            //get position from location array\n            var position = locations[i].location;\n            var title = locations[i].title; //create a marker per location and push to array\n\n            var marker = new window.google.maps.Marker({\n              map: map,\n              position: position,\n              title: title,\n              animation: window.google.maps.Animation.DROP,\n              id: i\n            }); //push into markers array\n\n            markers.push(marker); //extend bounds of map for each marker so they all appear on load\n\n            bounds.extend(marker.position); //create onClick event to open InfoWindow\n\n            marker.addListener('click', function () {\n              marker.setAnimation(window.google.maps.Animation.BOUNCE);\n              populateInfoWindow(this, infoWindow);\n            });\n          };\n\n          for (var i = 0; i < locations.length; i++) {\n            _loop(i);\n          } //fit map to bounds of all markers\n\n\n          map.fitBounds(bounds);\n        })();\n      } else {\n        //alert if the script does not load\n        alert('No Script Loaded');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        classID: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component); //ScriptLoader used to Async load Google Maps API\n\n\nexport default scriptLoader([\"https://maps.googleapis.com/maps/api/js?libraries=geometry&key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3\"])(Map);","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js"],"names":["React","Component","scriptLoader","InfoWindow","Map","isScriptLoadSucceed","populateInfoWindow","marker","infowindow","setContent","addListener","setAnimation","markers","map","window","google","maps","document","getElementById","center","lat","lng","zoom","locations","title","location","infoWindow","content","bounds","LatLngBounds","i","position","Marker","animation","Animation","DROP","id","push","extend","BOUNCE","length","fitBounds","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport scriptLoader from 'react-async-script-loader';\nimport InfoWindow from './InfoWindow';\n\n\nclass Map extends Component {\n\n  componentWillReceiveProps ({ isScriptLoadSucceed }) {\n    if (isScriptLoadSucceed) {\n\n      const markers = [];\n\n      const map = new window.google.maps.Map(document.getElementById('map'), {\n        center: {lat: 34.6466411, lng: -97.9536852},\n        zoom: 13\n      });\n\n      const locations = [\n        {title: 'Bethlehem', location:{lat: 31.7053996, lng: 35.1936877}},\n        {title: 'Nazareth', location:{lat: 32.6996454, lng: 35.2908666}},\n        {title: 'Capernaum', location:{lat: 32.8803473, lng: 35.5645522}},\n        {title: 'Gesthsemane', location:{lat: 31.7793143, lng: 35.2375914}},\n        {title: 'Church of the Holy Sepulchre', location:{lat: 31.7784858, lng: 35.2274115}},\n      ]\n\n      let infoWindow = new window.google.maps.InfoWindow({\n        content: null\n      });\n\n      let bounds = new window.google.maps.LatLngBounds();\n\n      //Loop over locations and create markers\n      for (let i=0; i<locations.length; i++) {\n        //get position from location array\n        let position = locations[i].location;\n        let title = locations[i].title;\n\n        //create a marker per location and push to array\n        let marker = new window.google.maps.Marker({\n          map: map,\n          position: position,\n          title: title,\n          animation: window.google.maps.Animation.DROP,\n          id: i\n        });\n\n        //push into markers array\n        markers.push(marker);\n\n        //extend bounds of map for each marker so they all appear on load\n        bounds.extend(marker.position);\n\n        //create onClick event to open InfoWindow\n        marker.addListener('click', function() {\n          marker.setAnimation(window.google.maps.Animation.BOUNCE);\n          populateInfoWindow(this, infoWindow);\n        });\n      }\n\n      //fit map to bounds of all markers\n      map.fitBounds(bounds);\n\n      function populateInfoWindow(marker, infowindow) {\n        //make sure infoWindow not already open\n        if (infowindow.marker !== marker) {\n          infowindow.marker = marker;\n          infowindow.setContent(`Hello`);\n\n          //make sure marker is cleared if infowindow is closed\n          infowindow.addListener('closeclick', function() {\n            infowindow.marker = null;\n            marker.setAnimation(null);\n          });\n        }\n      }\n\n    } else {\n      //alert if the script does not load\n      alert('No Script Loaded')\n    }\n  }\n\n  render() {\n\n    return (\n      <div classID=\"mapContainer\">\n        <div id='map'></div>\n      </div>\n    );\n\n  }\n\n}\n\n  //ScriptLoader used to Async load Google Maps API\nexport default scriptLoader(\n  [`https://maps.googleapis.com/maps/api/js?libraries=geometry&key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3`]\n) (Map)\n"]},"metadata":{},"sourceType":"module"}
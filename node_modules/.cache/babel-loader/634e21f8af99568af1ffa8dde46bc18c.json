{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/InfoWindow.js\";\nimport React, { Component } from 'react';\n\nvar InfoWindow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoWindow, _Component);\n\n  function InfoWindow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InfoWindow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfoWindow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.injectInfo = \"<div>Nothing Loaded</div>\";\n    return _this;\n  }\n\n  _createClass(InfoWindow, [{\n    key: \"injectInfo\",\n    value: function injectInfo(e) {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.foursquare.com/v2/venues/explore?client_id=BITALC3HSA4PLMTBLQXFRKDYX1Y0SCCWFBMWZC2SW2CTKJFW&client_secret=ESBUR3GBTUWVOYGUWQ4BGET0A3DGI0VYQTWCS2H1RU5CPK2W&v=20180323&limit=1&ll=this.props.loc.location.lat,this.props.loc.location.lng&query=coffee\").then(function (response) {\n        if (response.meta.code === 200) {\n          _this2.injectInfo = \"<div className=\\\"info-window-display\\\">Success!</div>\";\n        }\n      }).catch(function (error) {\n        _this2.injectInfo = \"<div className=\\\"info-window-display\\\">Error \".concat(error, \"</div>\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//Empty div to be populated by props passed down\n        // <div className=\"info-window\">{props.title}</div>\n        React.createElement(\"div\", {\n          className: \"info-window\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: this.props.loc.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return InfoWindow;\n}(Component);\n\nexport default InfoWindow;","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/InfoWindow.js"],"names":["React","Component","InfoWindow","injectInfo","e","fetch","then","response","meta","code","catch","error","props","loc","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UAEJC,U;;;;;;+BAEWC,C,EAAG,CAEb;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,qQAAL,CACCC,IADD,CACM,UAACC,QAAD,EAAc;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,GAA3B,EAAgC;AAC9B,UAAA,MAAI,CAACN,UAAL;AACD;AACJ,OALD,EAMCO,KAND,CAMO,UAACC,KAAD,EAAW;AAChB,QAAA,MAAI,CAACR,UAAL,0DAAgEQ,KAAhE;AACD,OARD;AASD;;;6BAGQ;AACP,aACE;AACF;AACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,GAAX,CAAeC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAHA;AAOD;;;;EA7BsBb,S;;AAiCzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass InfoWindow extends Component {\n\n  injectInfo = `<div>Nothing Loaded</div>`;\n\n  injectInfo(e) {\n\n  }\n\n  componentDidMount() {\n    fetch(`https://api.foursquare.com/v2/venues/explore?client_id=BITALC3HSA4PLMTBLQXFRKDYX1Y0SCCWFBMWZC2SW2CTKJFW&client_secret=ESBUR3GBTUWVOYGUWQ4BGET0A3DGI0VYQTWCS2H1RU5CPK2W&v=20180323&limit=1&ll=this.props.loc.location.lat,this.props.loc.location.lng&query=coffee`)\n    .then((response) => {\n        if (response.meta.code === 200) {\n          this.injectInfo = `<div className=\"info-window-display\">Success!</div>`\n        }\n    })\n    .catch((error) => {\n      this.injectInfo = `<div className=\"info-window-display\">Error ${error}</div>`\n    })\n  }\n\n\n  render() {\n    return (\n      //Empty div to be populated by props passed down\n    // <div className=\"info-window\">{props.title}</div>\n    <div className=\"info-window\">\n      <div id={this.props.loc.title}></div>\n    </div>\n    )\n  }\n}\n\n\nexport default InfoWindow\n"]},"metadata":{},"sourceType":"module"}
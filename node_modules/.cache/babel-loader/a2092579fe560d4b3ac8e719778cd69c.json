{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Map from './Map';\nimport InfoWindow from './InfoWindow';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: [{\n        title: 'Bethlehem',\n        location: {\n          lat: 31.7053996,\n          lng: 35.1936877\n        }\n      }, {\n        title: 'Nazareth',\n        location: {\n          lat: 32.6996454,\n          lng: 35.2908666\n        }\n      }, {\n        title: 'Capernaum',\n        location: {\n          lat: 32.8803473,\n          lng: 35.5645522\n        }\n      }, {\n        title: 'Gesthsemane',\n        location: {\n          lat: 31.7793143,\n          lng: 35.2375914\n        }\n      }, {\n        title: 'Church of the Holy Sepulchre',\n        location: {\n          lat: 31.7784858,\n          lng: 35.2274115\n        }\n      }] // createMarker(marker, map) {\n      //   let currentMarker = new window.google.maps.Marker({\n      //     position: { lat: marker.location.lat,\n      //                 lng: marker.location.lng},\n      //     map: map,\n      //     animation: window.google.maps.Animation.DROP,\n      //     title: marker.title\n      //   });\n      //   currentMarker.addListener('click', e => {\n      //     this.createInfoWindow(marker, map)\n      //   })\n      // }\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(e, map) {\n      var infoWindow = new window.google.maps.InfoWindow({\n        content: \"<div id='infoWindow' />\",\n        position: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n      infoWindow.addListener('domready', function (e) {\n        ReactDOM.render(React.createElement(InfoWindow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), document.getElementById('infoWindow'));\n      });\n      infoWindow.open(map);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var markers = [];\n      var locations = this.state.locations;\n      return React.createElement(Map, {\n        id: \"main-map\",\n        options: {\n          center: {\n            lat: 31.7053996,\n            lng: 35.1936877\n          },\n          zoom: 13\n        },\n        onMapLoad: function onMapLoad(map) {\n          locations.forEach(function (location) {\n            var position = location.location;\n            var title = location.title;\n            var marker = new window.google.maps.Marker({});\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js"],"names":["React","Component","ReactDOM","Map","InfoWindow","App","state","locations","title","location","lat","lng","e","map","infoWindow","window","google","maps","content","position","latLng","addListener","render","document","getElementById","open","markers","center","zoom","forEach","marker","Marker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Map from './Map';\nimport InfoWindow from './InfoWindow';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    locations: [\n      {title: 'Bethlehem', location:{lat: 31.7053996, lng: 35.1936877}},\n      {title: 'Nazareth', location:{lat: 32.6996454, lng: 35.2908666}},\n      {title: 'Capernaum', location:{lat: 32.8803473, lng: 35.5645522}},\n      {title: 'Gesthsemane', location:{lat: 31.7793143, lng: 35.2375914}},\n      {title: 'Church of the Holy Sepulchre', location:{lat: 31.7784858, lng: 35.2274115}},\n    ],\n  }\n\n  // createMarker(marker, map) {\n  //   let currentMarker = new window.google.maps.Marker({\n  //     position: { lat: marker.location.lat,\n  //                 lng: marker.location.lng},\n  //     map: map,\n  //     animation: window.google.maps.Animation.DROP,\n  //     title: marker.title\n  //   });\n  //   currentMarker.addListener('click', e => {\n  //     this.createInfoWindow(marker, map)\n  //   })\n  // }\n\n  createInfoWindow(e, map) {\n    const infoWindow = new window.google.maps.InfoWindow({\n      content: `<div id='infoWindow' />`,\n      position: { lat: e.latLng.lat(), lng: e.latLng.lng()}\n    })\n    infoWindow.addListener('domready', e => {\n      ReactDOM.render(<InfoWindow />, document.getElementById('infoWindow'))\n    })\n    infoWindow.open(map)\n  }\n\n  render() {\n    let markers = [];\n    const locations = this.state.locations;\n\n    return (\n      <Map\n        id='main-map'\n        options={{\n          center: { lat:31.7053996 ,lng:35.1936877 },\n          zoom: 13\n        }}\n        onMapLoad={ map => {\n          locations.forEach((location) => {\n            let position = location.location;\n            let title = location.title;\n            let marker = new window.google.maps.Marker({\n              \n            })\n          })\n        }}\n      />\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
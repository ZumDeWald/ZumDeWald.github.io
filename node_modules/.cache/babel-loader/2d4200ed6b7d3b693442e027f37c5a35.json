{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FilterList from './FilterList';\nimport Map from './Map';\nimport InfoWindow from './InfoWindow';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: [{\n        title: 'Bethlehem',\n        location: {\n          lat: 31.7053996,\n          lng: 35.1936877\n        }\n      }, {\n        title: 'Nazareth',\n        location: {\n          lat: 32.6996454,\n          lng: 35.2908666\n        }\n      }, {\n        title: 'Capernaum',\n        location: {\n          lat: 32.8803473,\n          lng: 35.5645522\n        }\n      }, {\n        title: 'Gesthsemane',\n        location: {\n          lat: 31.7793143,\n          lng: 35.2375914\n        }\n      }, {\n        title: 'Church of the Holy Sepulchre',\n        location: {\n          lat: 31.777207,\n          lng: 35.231681\n        }\n      }],\n      showLocations: [{\n        title: 'Bethlehem',\n        location: {\n          lat: 31.705791,\n          lng: 35.200657\n        }\n      }, {\n        title: 'Nazareth',\n        location: {\n          lat: 32.6996,\n          lng: 35.3035\n        }\n      }, {\n        title: 'Capernaum',\n        location: {\n          lat: 32.8803,\n          lng: 35.5733\n        }\n      }, {\n        title: 'Gesthsemane',\n        location: {\n          lat: 31.779402,\n          lng: 35.240197\n        }\n      }, {\n        title: 'Church of the Holy Sepulchre',\n        location: {\n          lat: 31.7784013,\n          lng: 35.2295513\n        }\n      }]\n    };\n\n    _this.filterLocations = function (point) {\n      _this.setState({\n        showLocations: _this.state.locations.filter(function (location) {\n          return location === point;\n        })\n      });\n\n      console.log(_this.state.showLocations);\n\n      _this.onScriptLoad('main-map');\n    };\n\n    _this.mapLoad = function (map) {\n      //Create bounds instance\n      var bounds = new window.google.maps.LatLngBounds(); //Loop over state and create marker info for each location\n      //Then add listener for each individual marker\n\n      _this.state.showLocations.forEach(function (place, index) {\n        var position = place.location;\n        var title = place.title;\n        var marker = new window.google.maps.Marker({\n          map: map,\n          position: position,\n          title: title,\n          animation: window.google.maps.Animation.DROP,\n          id: index,\n          zoom: 20\n        }); //Extend boundry of map to incorporate each marker\n\n        bounds.extend(marker.position);\n        marker.addListener('click', function () {\n          _this.createInfoWindow(marker, map);\n        });\n      }); //Fit map to extended bounds\n\n\n      map.fitBounds(bounds);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(e, map) {\n      //save title and ID to pass to InfoWindow component\n      var currentTitle = e.title;\n      var currentID = e.id; //create InfoWindow instance\n\n      var infoWindow = new window.google.maps.InfoWindow({\n        content: \"<div id='\".concat(currentID, \"' />\"),\n        position: e.position\n      }); //add listener to poulate infoWindow on click\n\n      infoWindow.addListener('domready', function (e) {\n        ReactDOM.render(React.createElement(InfoWindow, {\n          title: currentTitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), document.getElementById(\"\".concat(currentID)));\n      }); //open infoWindow on map\n\n      infoWindow.open(map);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FilterList, {\n        locations: this.state.locations,\n        onFilterLocations: this.filterLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Map, {\n        id: \"main-map\",\n        options: {\n          center: {\n            lat: 31.7053996,\n            lng: 35.1936877\n          },\n          zoom: 20\n        },\n        onMapLoad: this.mapLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js"],"names":["React","Component","ReactDOM","FilterList","Map","InfoWindow","App","state","locations","title","location","lat","lng","showLocations","filterLocations","point","setState","filter","console","log","onScriptLoad","mapLoad","map","bounds","window","google","maps","LatLngBounds","forEach","place","index","position","marker","Marker","animation","Animation","DROP","id","zoom","extend","addListener","createInfoWindow","fitBounds","e","currentTitle","currentID","infoWindow","content","render","document","getElementById","open","center"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FilterList from './FilterList';\nimport Map from './Map';\nimport InfoWindow from './InfoWindow';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    locations: [\n      {title: 'Bethlehem', location:{lat: 31.7053996, lng: 35.1936877}},\n      {title: 'Nazareth', location:{lat: 32.6996454, lng: 35.2908666}},\n      {title: 'Capernaum', location:{lat: 32.8803473, lng: 35.5645522}},\n      {title: 'Gesthsemane', location:{lat: 31.7793143, lng: 35.2375914}},\n      {title: 'Church of the Holy Sepulchre', location:{lat: 31.777207, lng: 35.231681}}\n    ],\n    showLocations: [\n      {title: 'Bethlehem', location:{lat: 31.705791, lng: 35.200657}},\n      {title: 'Nazareth', location:{lat: 32.6996, lng: 35.3035}},\n      {title: 'Capernaum', location:{lat: 32.8803, lng: 35.5733}},\n      {title: 'Gesthsemane', location:{lat: 31.779402, lng: 35.240197}},\n      {title: 'Church of the Holy Sepulchre', location:{lat: 31.7784013, lng: 35.2295513}}\n    ]\n  }\n\n\n  filterLocations = (point) => {\n    this.setState({\n      showLocations: this.state.locations.filter((location) => location === point)\n    })\n    console.log(this.state.showLocations);\n    this.onScriptLoad('main-map')\n  }\n\n  // \n  // onScriptLoad(mapID, options) {\n  //   const map = new window.google.maps.Map(\n  //     document.getElementById(mapID),\n  //     options);\n  //     this.mapLoad(map);\n  // }\n\n\n    //On creating a map instance, add markers/infoWindows\n  mapLoad = (map) => {\n    //Create bounds instance\n    const bounds = new window.google.maps.LatLngBounds();\n    //Loop over state and create marker info for each location\n    //Then add listener for each individual marker\n    this.state.showLocations.forEach((place, index) => {\n      let position = place.location;\n      let title = place.title;\n      let marker = new window.google.maps.Marker({\n        map: map,\n        position: position,\n        title: title,\n        animation: window.google.maps.Animation.DROP,\n        id: index,\n        zoom: 20\n      });\n      //Extend boundry of map to incorporate each marker\n      bounds.extend(marker.position);\n      marker.addListener('click', () => {\n        this.createInfoWindow(marker, map);\n      });\n    });\n    //Fit map to extended bounds\n    map.fitBounds(bounds);\n  }\n\n\n  createInfoWindow(e, map) {\n    //save title and ID to pass to InfoWindow component\n    let currentTitle = e.title;\n    let currentID = e.id;\n    //create InfoWindow instance\n    const infoWindow = new window.google.maps.InfoWindow({\n      content: `<div id='${currentID}' />`,\n      position: e.position\n    })\n    //add listener to poulate infoWindow on click\n    infoWindow.addListener('domready', e => {\n      ReactDOM.render(<InfoWindow\n        title={currentTitle}\n      />, document.getElementById(`${currentID}`))\n    })\n    //open infoWindow on map\n    infoWindow.open(map)\n  }\n\n\n  render() {\n\n    return (\n      <div id=\"map-container\">\n        <FilterList\n          locations={this.state.locations}\n          onFilterLocations={this.filterLocations}\n         />\n        <Map\n          id='main-map'\n          options={{\n            center: { lat:31.7053996 ,lng:35.1936877 },\n            zoom: 20\n          }}\n          onMapLoad={ this.mapLoad }\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
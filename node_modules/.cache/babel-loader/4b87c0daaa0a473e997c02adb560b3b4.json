{"ast":null,"code":"import _slicedToArray from \"/Users/Z/Projects/WebDev/ZumDeWald.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/ZumDeWald.github.io/src/PicTiles.js\";\nimport React, { useState } from 'react';\nimport Viewer from \"./Viewer.js\";\n\nvar PicTiles = function PicTiles(props) {\n  //Destructuring\n  var pics = props.pics;\n  /* React State Hook used to set wether menu is open and provides a method to change the state */\n\n  var _useState = useState([pics[0], 0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPic = _useState2[0],\n      setCurrentPic = _useState2[1]; // Sets hook state currentPic to what is passed in\n\n\n  var setViewerPic = function setViewerPic(index) {\n    setCurrentPic([pics[index], index]);\n  };\n  /* Function to change pic in viewer to next in array, or move to first if at end */\n\n\n  var setNextPic = function setNextPic(refPic) {\n    if (refPic[1] < pics.length - 1) {\n      var nextPic = refPic[1] + 1;\n      setCurrentPic([pics[nextPic], nextPic]);\n    } else {\n      setCurrentPic([pics[0], 0]);\n    }\n  };\n  /* Function to change pic in viewer to previous in array, or move to last if at beginning */\n\n\n  var setPrevPic = function setPrevPic(refPic) {\n    var totalPics = pics.length - 1;\n\n    if (refPic[1] > 0) {\n      var nextPic = refPic[1] - 1;\n      setCurrentPic([pics[nextPic], nextPic]);\n    } else {\n      setCurrentPic([pics[totalPics], totalPics]);\n    }\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Viewer, {\n    currentPic: currentPic,\n    handleNextPic: setNextPic,\n    handlePrevPic: setPrevPic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"article\", {\n    className: \"gallery-viewer-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"tile-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, pics.map(function (pic, index) {\n    return React.createElement(\"li\", {\n      className: \"tile-item\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"picture\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      srcSet: \"\".concat(pic, \"_sm.webp\"),\n      type: \"image/webp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"tile-pic hover-hand\",\n      src: \"\".concat(pic, \"_sm.jpg\"),\n      alt: pic,\n      type: \"image/jpg\",\n      onClick: function onClick() {\n        setViewerPic(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }))));\n};\n\nexport default PicTiles;","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/ZumDeWald.github.io/src/PicTiles.js"],"names":["React","useState","Viewer","PicTiles","props","pics","currentPic","setCurrentPic","setViewerPic","index","setNextPic","refPic","length","nextPic","setPrevPic","totalPics","map","pic"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Viewer from \"./Viewer.js\";\n\nconst PicTiles = (props) => {\n\n  //Destructuring\n  const { pics } = props;\n\n  /* React State Hook used to set wether menu is open and provides a method to change the state */\n  const [currentPic, setCurrentPic] = useState([pics[0], 0]);\n\n  // Sets hook state currentPic to what is passed in\n  const setViewerPic = (index) => {\n    setCurrentPic([pics[index], index]);\n  };\n\n  /* Function to change pic in viewer to next in array, or move to first if at end */\n  const setNextPic = (refPic) => {\n    if (refPic[1] < (pics.length - 1)) {\n      let nextPic = (refPic[1] + 1);\n      setCurrentPic([pics[nextPic], nextPic]);\n    } else {\n      setCurrentPic([pics[0], 0]);\n    }\n  }\n\n  /* Function to change pic in viewer to previous in array, or move to last if at beginning */\n  const setPrevPic = (refPic) => {\n    const totalPics = (pics.length - 1);\n    if (refPic[1] > 0) {\n      let nextPic = (refPic[1] - 1);\n      setCurrentPic([pics[nextPic], nextPic]);\n    } else {\n      setCurrentPic([pics[totalPics], totalPics]);\n    }\n  }\n\n  return (\n    <section>\n      <Viewer currentPic={currentPic}\n                 handleNextPic={setNextPic}\n                 handlePrevPic={setPrevPic} />\n      <article className=\"gallery-viewer-area\">\n        <ul className=\"tile-list\">\n          {pics.map((pic, index) => (\n            <li className=\"tile-item\"\n                key={index}>\n              <picture>\n                <source srcSet={`${pic}_sm.webp`} type=\"image/webp\" />\n                <img className=\"tile-pic hover-hand\"\n                     src={`${pic}_sm.jpg`}\n                     alt={pic}\n                     type=\"image/jpg\"\n                     onClick={() => {setViewerPic(index)}} />\n              </picture>\n            </li>\n          ))}\n        </ul>\n      </article>\n    </section>\n  );\n}\n\n\nexport default PicTiles;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js\";\nimport React, { Component } from 'react';\nimport scriptLoader from 'react-async-script-loader';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var isScriptLoadSucceed = _ref.isScriptLoadSucceed;\n\n      if (isScriptLoadSucceed) {\n        var markers = [];\n        var map = new window.google.maps.Map(document.getElementById('map'), {\n          center: {\n            lat: 38.7091572,\n            lng: -90.3872404\n          },\n          zoom: 13\n        });\n        var locations = [{\n          title: 'location1',\n          location: {\n            lat: 34.6446582,\n            lng: -97.930316\n          }\n        }, {\n          title: 'location2',\n          location: {\n            lat: 34.6505821,\n            lng: -97.9580572\n          }\n        }, {\n          title: 'location3',\n          location: {\n            lat: 34.6454464,\n            lng: -97.9676083\n          }\n        }, {\n          title: 'location4',\n          location: {\n            lat: 34.6466411,\n            lng: -97.9536852\n          }\n        }, {\n          title: 'location5',\n          location: {\n            lat: 34.6667351,\n            lng: -97.9548392\n          }\n        }]; //Loop over locations and create markers\n\n        for (var i = 0; i < locations.length; i++) {\n          //get position from location array\n          var position = locations[i].location;\n          var title = locations[i].title; //create a marker per location and push to array\n\n          var _marker = new window.google.maps.Marker({\n            map: map,\n            position: position,\n            title: title,\n            animation: window.google.maps.Animation.DROP,\n            id: i\n          });\n        }\n\n        var infoWindow = new window.google.maps.InfoWindow({\n          content: \"I am telling you the INFO\"\n        });\n        marker.addListener(\"click\", function () {\n          infoWindow.open(map, marker);\n        });\n      } else {\n        alert('No Script Loaded');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        classID: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component); //ScriptLoader used to Async load Google Maps API\n\n\nexport default scriptLoader([\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3\"])(Map);","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js"],"names":["React","Component","scriptLoader","Map","isScriptLoadSucceed","markers","map","window","google","maps","document","getElementById","center","lat","lng","zoom","locations","title","location","i","length","position","marker","Marker","animation","Animation","DROP","id","infoWindow","InfoWindow","content","addListener","open","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport scriptLoader from 'react-async-script-loader';\n\n\nclass Map extends Component {\n\n  componentWillReceiveProps ({ isScriptLoadSucceed }) {\n    if (isScriptLoadSucceed) {\n\n      const markers = [];\n\n      const map = new window.google.maps.Map(document.getElementById('map'), {\n        center: {lat: 38.7091572, lng: -90.3872404},\n        zoom: 13\n      });\n\n      const locations = [\n        {title: 'location1', location:{lat: 34.6446582, lng: -97.930316}},\n        {title: 'location2', location:{lat: 34.6505821, lng: -97.9580572}},\n        {title: 'location3', location:{lat: 34.6454464, lng: -97.9676083}},\n        {title: 'location4', location:{lat: 34.6466411, lng: -97.9536852}},\n        {title: 'location5', location:{lat: 34.6667351, lng: -97.9548392}},\n      ]\n\n      //Loop over locations and create markers\n      for (let i=0; i<locations.length; i++) {\n        //get position from location array\n        let position = locations[i].location;\n        let title = locations[i].title;\n        //create a marker per location and push to array\n        let marker = new window.google.maps.Marker({\n          map: map,\n          position: position,\n          title: title,\n          animation: window.google.maps.Animation.DROP,\n          id: i\n        });\n      }\n\n      let infoWindow = new window.google.maps.InfoWindow({\n        content: `I am telling you the INFO`\n      });\n      marker.addListener(\"click\", () => {\n        infoWindow.open(map, marker);\n      });\n\n    } else {\n      alert('No Script Loaded')\n    }\n  }\n\n  render() {\n\n    return (\n      <div classID=\"mapContainer\">\n        <div id='map'></div>\n      </div>\n    );\n\n  }\n\n}\n\n  //ScriptLoader used to Async load Google Maps API\nexport default scriptLoader(\n  [`https://maps.googleapis.com/maps/api/js?key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3`]\n) (Map)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/InfoWindow.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar InfoWindow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoWindow, _Component);\n\n  function InfoWindow() {\n    _classCallCheck(this, InfoWindow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InfoWindow).apply(this, arguments));\n  }\n\n  _createClass(InfoWindow, [{\n    key: \"injectInfo\",\n    value: function injectInfo(e, pass, error) {\n      if (pass) {\n        ReactDOM.render(React.createElement(\"div\", {\n          className: \"info-window-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, \"Success!\"));\n      } else {\n        ReactDOM.render(\"<div className=\\\"info-window-display\\\">Error \".concat(error, \"</div>\"));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      fetch(\"https://api.foursquare.com/v2/venues/explore?client_id=BITALC3HSA4PLMTBLQXFRKDYX1Y0SCCWFBMWZC2SW2CTKJFW&client_secret=ESBUR3GBTUWVOYGUWQ4BGET0A3DGI0VYQTWCS2H1RU5CPK2W&v=20180323&limit=1&ll=this.props.loc.location.lat,this.props.loc.location.lng&query=coffee\").then(function (response) {\n        if (response.meta.code === 200) {\n          _this.injectInfo(response, true, null);\n        }\n      }).catch(function (error) {\n        _this.injectInfo(error, false, error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//Empty div to be populated by props passed down\n        // <div className=\"info-window\">{props.title}</div>\n        React.createElement(\"div\", {\n          className: \"info-window\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: this.props.loc.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return InfoWindow;\n}(Component);\n\nexport default InfoWindow;","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/InfoWindow.js"],"names":["React","Component","ReactDOM","InfoWindow","e","pass","error","render","fetch","then","response","meta","code","injectInfo","catch","props","loc","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,U;;;;;;;;;;;;;+BAEOC,C,EAAGC,I,EAAMC,K,EAAO;AACzB,UAAID,IAAJ,EAAU;AACRH,QAAAA,QAAQ,CAACK,MAAT,CACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,OAJD,MAIO;AACLL,QAAAA,QAAQ,CAACK,MAAT,wDACgDD,KADhD;AAGD;AACF;;;wCAEmB;AAAA;;AAClBE,MAAAA,KAAK,qQAAL,CACCC,IADD,CACM,UAACC,QAAD,EAAc;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,GAA3B,EAAgC;AAC9B,UAAA,KAAI,CAACC,UAAL,CAAgBH,QAAhB,EAA0B,IAA1B,EAAgC,IAAhC;AACD;AACJ,OALD,EAMCI,KAND,CAMO,UAACR,KAAD,EAAW;AAChB,QAAA,KAAI,CAACO,UAAL,CAAgBP,KAAhB,EAAuB,KAAvB,EAA8BA,KAA9B;AACD,OARD;AASD;;;6BAGQ;AACP,aACE;AACF;AACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAE,KAAKS,KAAL,CAAWC,GAAX,CAAeC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAHA;AAOD;;;;EAnCsBhB,S;;AAuCzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass InfoWindow extends Component {\n\n  injectInfo(e, pass, error) {\n    if (pass) {\n      ReactDOM.render(\n        <div className=\"info-window-display\">Success!</div>\n      )\n    } else {\n      ReactDOM.render(\n        `<div className=\"info-window-display\">Error ${error}</div>`\n      )\n    }\n  }\n\n  componentDidMount() {\n    fetch(`https://api.foursquare.com/v2/venues/explore?client_id=BITALC3HSA4PLMTBLQXFRKDYX1Y0SCCWFBMWZC2SW2CTKJFW&client_secret=ESBUR3GBTUWVOYGUWQ4BGET0A3DGI0VYQTWCS2H1RU5CPK2W&v=20180323&limit=1&ll=this.props.loc.location.lat,this.props.loc.location.lng&query=coffee`)\n    .then((response) => {\n        if (response.meta.code === 200) {\n          this.injectInfo(response, true, null);\n        }\n    })\n    .catch((error) => {\n      this.injectInfo(error, false, error);\n    })\n  }\n\n\n  render() {\n    return (\n      //Empty div to be populated by props passed down\n    // <div className=\"info-window\">{props.title}</div>\n    <div className=\"info-window\">\n      <div id={this.props.loc.title}></div>\n    </div>\n    )\n  }\n}\n\n\nexport default InfoWindow\n"]},"metadata":{},"sourceType":"module"}
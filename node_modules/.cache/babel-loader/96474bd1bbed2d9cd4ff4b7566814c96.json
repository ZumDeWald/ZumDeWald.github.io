{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js\";\nimport React, { Component } from 'react';\nimport scriptLoader from 'react-async-script-loader';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var _this = this;\n\n      var isScriptLoadSucceed = _ref.isScriptLoadSucceed;\n\n      if (isScriptLoadSucceed) {\n        (function () {\n          var markers = [];\n          var map = new window.google.maps.Map(document.getElementById('map'), {\n            center: {\n              lat: 38.7091572,\n              lng: -90.3872404\n            },\n            zoom: 13\n          });\n          var locations = [{\n            title: 'location1',\n            location: {\n              lat: 34.6446582,\n              lng: -97.930316\n            }\n          }, {\n            title: 'location2',\n            location: {\n              lat: 34.6505821,\n              lng: -97.9580572\n            }\n          }, {\n            title: 'location3',\n            location: {\n              lat: 34.6454464,\n              lng: -97.9676083\n            }\n          }, {\n            title: 'location4',\n            location: {\n              lat: 34.6466411,\n              lng: -97.9536852\n            }\n          }, {\n            title: 'location5',\n            location: {\n              lat: 34.6667351,\n              lng: -97.9548392\n            }\n          }]; //Loop over locations and create markers\n\n          for (var i = 0; i < locations.length; i++) {\n            //get position from location array\n            var position = locations[i].location;\n            var title = locations[i].title; //create a marker per location and push to array\n\n            var _marker = new window.google.maps.Marker({\n              map: map,\n              position: position,\n              title: title,\n              animation: window.google.maps.Animation.DROP,\n              id: i\n            }); //push into markers array\n\n\n            markers.push(_marker); //create onClick event to open InfoWindow\n\n            _marker.addListener('click', function () {\n              populateInfoWindow(_this, infoWindow);\n            });\n          }\n\n          var infoWindow = new window.google.maps.InfoWindow({\n            content: \"I am telling you the INFO\"\n          });\n          marker.addListener(\"click\", function () {\n            infoWindow.open(map, marker);\n          });\n        })();\n      } else {\n        alert('No Script Loaded');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        classID: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component); //ScriptLoader used to Async load Google Maps API\n\n\nexport default scriptLoader([\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3\"])(Map);","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/Map.js"],"names":["React","Component","scriptLoader","Map","isScriptLoadSucceed","markers","map","window","google","maps","document","getElementById","center","lat","lng","zoom","locations","title","location","i","length","position","marker","Marker","animation","Animation","DROP","id","push","addListener","populateInfoWindow","infoWindow","InfoWindow","content","open","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport scriptLoader from 'react-async-script-loader';\n\n\nclass Map extends Component {\n\n  componentWillReceiveProps ({ isScriptLoadSucceed }) {\n    if (isScriptLoadSucceed) {\n\n      const markers = [];\n\n      const map = new window.google.maps.Map(document.getElementById('map'), {\n        center: {lat: 38.7091572, lng: -90.3872404},\n        zoom: 13\n      });\n\n      const locations = [\n        {title: 'location1', location:{lat: 34.6446582, lng: -97.930316}},\n        {title: 'location2', location:{lat: 34.6505821, lng: -97.9580572}},\n        {title: 'location3', location:{lat: 34.6454464, lng: -97.9676083}},\n        {title: 'location4', location:{lat: 34.6466411, lng: -97.9536852}},\n        {title: 'location5', location:{lat: 34.6667351, lng: -97.9548392}},\n      ]\n\n      //Loop over locations and create markers\n      for (let i=0; i<locations.length; i++) {\n        //get position from location array\n        let position = locations[i].location;\n        let title = locations[i].title;\n        //create a marker per location and push to array\n        let marker = new window.google.maps.Marker({\n          map: map,\n          position: position,\n          title: title,\n          animation: window.google.maps.Animation.DROP,\n          id: i\n        });\n        //push into markers array\n        markers.push(marker);\n        //create onClick event to open InfoWindow\n        marker.addListener('click', () => {\n          populateInfoWindow(this, infoWindow);\n        });\n      }\n\n      let infoWindow = new window.google.maps.InfoWindow({\n        content: `I am telling you the INFO`\n      });\n      marker.addListener(\"click\", () => {\n        infoWindow.open(map, marker);\n      });\n\n    } else {\n      alert('No Script Loaded')\n    }\n  }\n\n  render() {\n\n    return (\n      <div classID=\"mapContainer\">\n        <div id='map'></div>\n      </div>\n    );\n\n  }\n\n}\n\n  //ScriptLoader used to Async load Google Maps API\nexport default scriptLoader(\n  [`https://maps.googleapis.com/maps/api/js?key=AIzaSyAcGzKXNeOcVTjtGJ3mezaCbmfq3MAA3_c&v=3`]\n) (Map)\n"]},"metadata":{},"sourceType":"module"}
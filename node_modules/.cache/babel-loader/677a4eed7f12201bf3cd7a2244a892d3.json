{"ast":null,"code":"import _classCallCheck from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FilterList from './FilterList';\nimport Map from './Map';\nimport InfoWindow from './InfoWindow';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: [{\n        title: \"Blueprint\",\n        location: {\n          lat: 38.6556835,\n          lng: -90.3027671\n        },\n        fsID: \"5224911e11d21d67f10a97d0\"\n      }, {\n        title: \"Original Kaldi's\",\n        location: {\n          lat: 38.6386208,\n          lng: -90.3097823\n        },\n        fsID: \"4acbc3faf964a520f9c520e3\"\n      }, {\n        title: \"Hartford\",\n        location: {\n          lat: 38.6027692,\n          lng: -90.2545727\n        },\n        fsID: \"4ae473a3f964a520a99a21e3\"\n      }, {\n        title: \"Mud House\",\n        location: {\n          lat: 38.59302865,\n          lng: -90.22218699999999\n        },\n        fsID: \"4acbc3faf964a520d7c520e3\"\n      }, {\n        title: \"Sump\",\n        location: {\n          lat: 38.5877544,\n          lng: -90.2283778\n        },\n        fsID: \"4ef9f1ff93ad7cf2ec969baa\"\n      }]\n    };\n    _this.bounds = null;\n    _this.markers = [];\n\n    _this.setMapOnAll = function (map) {\n      _this.markers.forEach(function (marker) {\n        marker.setMap(map);\n      });\n    };\n\n    _this.filterMarker = function (index) {\n      _this.setMapOnAll(null);\n\n      _this.markers[index].setMap(window.mainMap);\n\n      window.mainMap.panTo(_this.markers[index].position);\n    };\n\n    _this.showAllLocations = function () {\n      _this.setMapOnAll(window.mainMap);\n\n      window.mainMap.fitBounds(_this.bounds);\n    };\n\n    _this.mapLoad = function (map) {\n      //Create bounds instance\n      _this.bounds = new window.google.maps.LatLngBounds(); //Loop over state and create marker info for each location\n      //Then add listener for each individual marker\n\n      _this.state.locations.forEach(function (place, index) {\n        var position = place.location;\n        var title = place.title;\n        var marker = new window.google.maps.Marker({\n          map: map,\n          position: position,\n          title: title,\n          animation: window.google.maps.Animation.DROP,\n          id: index,\n          zoom: 20\n        }); //Extend boundry of map to incorporate each marker\n\n        _this.bounds.extend(marker.position);\n\n        _this.markers.push(marker);\n\n        marker.addListener('click', function () {\n          _this.createInfoWindow(marker, map);\n        });\n      }); //Fit map to extended bounds\n\n\n      map.fitBounds(_this.bounds);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(e, map) {\n      //save title and ID to pass to InfoWindow component\n      var currentLoc = e;\n      var currentID = e.id; //create InfoWindow instance\n\n      var infoWindow = new window.google.maps.InfoWindow({\n        content: \"<div id='\".concat(currentID, \"' />\"),\n        position: e.position\n      }); //add listener to poulate infoWindow on click\n\n      infoWindow.addListener('domready', function (e) {\n        ReactDOM.render(React.createElement(InfoWindow, {\n          loc: currentLoc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), document.getElementById(\"\".concat(currentID)));\n      }); //open infoWindow on map\n\n      infoWindow.open(map);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FilterList, {\n        locations: this.state.locations,\n        onFilterMarker: this.filterMarker,\n        showAllLocations: this.showAllLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Map, {\n        id: \"main-map\",\n        options: {\n          center: {\n            lat: 31.7053996,\n            lng: 35.1936877\n          },\n          zoom: 20\n        },\n        onMapLoad: this.mapLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/GwG-FEND/Projects/NeighborhoodMap/neighborhood-map/src/App.js"],"names":["React","Component","ReactDOM","FilterList","Map","InfoWindow","App","state","locations","title","location","lat","lng","fsID","bounds","markers","setMapOnAll","map","forEach","marker","setMap","filterMarker","index","window","mainMap","panTo","position","showAllLocations","fitBounds","mapLoad","google","maps","LatLngBounds","place","Marker","animation","Animation","DROP","id","zoom","extend","push","addListener","createInfoWindow","e","currentLoc","currentID","infoWindow","content","render","document","getElementById","open","center"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FilterList from './FilterList';\nimport Map from './Map';\nimport InfoWindow from './InfoWindow';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    locations: [\n      {title: `Blueprint`,\n        location:{lat: 38.6556835, lng: -90.3027671},\n        fsID: `5224911e11d21d67f10a97d0`},\n      {title: `Original Kaldi's`,\n        location:{lat: 38.6386208, lng: -90.3097823},\n        fsID: `4acbc3faf964a520f9c520e3`},\n      {title: `Hartford`,\n        location:{lat: 38.6027692, lng: -90.2545727},\n        fsID: `4ae473a3f964a520a99a21e3`},\n      {title: `Mud House`,\n        location:{lat: 38.59302865, lng: -90.22218699999999},\n        fsID: `4acbc3faf964a520d7c520e3`},\n      {title: `Sump`,\n        location:{lat: 38.5877544, lng: -90.2283778},\n        fsID: `4ef9f1ff93ad7cf2ec969baa`}\n    ],\n  }\n\n  bounds = null;\n  markers=[];\n\n  setMapOnAll = (map) => {\n    this.markers.forEach((marker) => {\n      marker.setMap(map);\n    })\n  }\n\n  filterMarker = (index) => {\n    this.setMapOnAll(null);\n    this.markers[index].setMap(window.mainMap);\n    window.mainMap.panTo(this.markers[index].position);\n  }\n\n  showAllLocations = () => {\n    this.setMapOnAll(window.mainMap);\n    window.mainMap.fitBounds(this.bounds);\n  }\n\n    //On creating a map instance, add markers/infoWindows\n  mapLoad = (map) => {\n    //Create bounds instance\n    this.bounds = new window.google.maps.LatLngBounds();\n    //Loop over state and create marker info for each location\n    //Then add listener for each individual marker\n    this.state.locations.forEach((place, index) => {\n      let position = place.location;\n      let title = place.title;\n      let marker = new window.google.maps.Marker({\n        map: map,\n        position: position,\n        title: title,\n        animation: window.google.maps.Animation.DROP,\n        id: index,\n        zoom: 20\n      });\n      //Extend boundry of map to incorporate each marker\n      this.bounds.extend(marker.position);\n      this.markers.push(marker);\n      marker.addListener('click', () => {\n        this.createInfoWindow(marker, map);\n      });\n    });\n    //Fit map to extended bounds\n    map.fitBounds(this.bounds);\n  }\n\n\n  createInfoWindow(e, map) {\n    //save title and ID to pass to InfoWindow component\n    let currentLoc = e;\n    let currentID = e.id;\n    //create InfoWindow instance\n    const infoWindow = new window.google.maps.InfoWindow({\n      content: `<div id='${currentID}' />`,\n      position: e.position\n    })\n    //add listener to poulate infoWindow on click\n    infoWindow.addListener('domready', e => {\n      ReactDOM.render(<InfoWindow\n        loc={currentLoc}\n      />, document.getElementById(`${currentID}`))\n    })\n    //open infoWindow on map\n    infoWindow.open(map)\n  }\n\n\n  render() {\n\n    return (\n      <div id=\"map-container\">\n        <FilterList\n          locations={this.state.locations}\n          onFilterMarker={this.filterMarker}\n          showAllLocations={this.showAllLocations}\n         />\n        <Map\n          id='main-map'\n          options={{\n            center: { lat:31.7053996 ,lng:35.1936877 },\n            zoom: 20\n          }}\n          onMapLoad={ this.mapLoad }\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}